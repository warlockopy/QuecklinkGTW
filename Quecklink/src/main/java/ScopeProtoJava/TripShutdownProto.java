package ScopeProtoJava;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: TripShutdownProto.proto

public final class TripShutdownProto {
private TripShutdownProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface TripShutdownOrBuilder extends
   // @@protoc_insertion_point(interface_extends:TripShutdown)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required .EventHeader header = 1;</code>
  */
 boolean hasHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeader getHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder();

 /**
  * <code>optional uint32 trip_id = 2;</code>
  *
  * <pre>
  * Trip identifier. Must match the one in TripStartup event.
  * </pre>
  */
 boolean hasTripId();
 /**
  * <code>optional uint32 trip_id = 2;</code>
  *
  * <pre>
  * Trip identifier. Must match the one in TripStartup event.
  * </pre>
  */
 int getTripId();

 /**
  * <code>optional uint32 trip_start_delay_seconds = 3;</code>
  *
  * <pre>
  * Delay of trip startup in seconds. Precision: 1
  * </pre>
  */
 boolean hasTripStartDelaySeconds();
 /**
  * <code>optional uint32 trip_start_delay_seconds = 3;</code>
  *
  * <pre>
  * Delay of trip startup in seconds. Precision: 1
  * </pre>
  */
 int getTripStartDelaySeconds();

 /**
  * <code>optional uint32 green_time_percent = 4;</code>
  *
  * <pre>
  * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
  * </pre>
  */
 boolean hasGreenTimePercent();
 /**
  * <code>optional uint32 green_time_percent = 4;</code>
  *
  * <pre>
  * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
  * </pre>
  */
 int getGreenTimePercent();

 /**
  * <code>optional uint32 trip_duration_seconds = 5;</code>
  *
  * <pre>
  * Total trip duration in seconds. Precision: 1
  * </pre>
  */
 boolean hasTripDurationSeconds();
 /**
  * <code>optional uint32 trip_duration_seconds = 5;</code>
  *
  * <pre>
  * Total trip duration in seconds. Precision: 1
  * </pre>
  */
 int getTripDurationSeconds();

 /**
  * <code>optional uint32 trip_distance_meters = 6;</code>
  *
  * <pre>
  * Total trip distance (m). Precision: 1
  * </pre>
  */
 boolean hasTripDistanceMeters();
 /**
  * <code>optional uint32 trip_distance_meters = 6;</code>
  *
  * <pre>
  * Total trip distance (m). Precision: 1
  * </pre>
  */
 int getTripDistanceMeters();
}
/**
* Protobuf type {@code TripShutdown}
*
* <pre>
* TripS hutdown
* </pre>
*/
public static final class TripShutdown extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:TripShutdown)
   TripShutdownOrBuilder {
 // Use TripShutdown.newBuilder() to construct.
 private TripShutdown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private TripShutdown(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final TripShutdown defaultInstance;
 public static TripShutdown getDefaultInstance() {
   return defaultInstance;
 }

 public TripShutdown getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private TripShutdown(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 10: {
           EventHeaderProto.EventHeader.Builder subBuilder = null;
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
             subBuilder = header_.toBuilder();
           }
           header_ = input.readMessage(EventHeaderProto.EventHeader.PARSER, extensionRegistry);
           if (subBuilder != null) {
             subBuilder.mergeFrom(header_);
             header_ = subBuilder.buildPartial();
           }
           bitField0_ |= 0x00000001;
           break;
         }
         case 16: {
           bitField0_ |= 0x00000002;
           tripId_ = input.readUInt32();
           break;
         }
         case 24: {
           bitField0_ |= 0x00000004;
           tripStartDelaySeconds_ = input.readUInt32();
           break;
         }
         case 32: {
           bitField0_ |= 0x00000008;
           greenTimePercent_ = input.readUInt32();
           break;
         }
         case 40: {
           bitField0_ |= 0x00000010;
           tripDurationSeconds_ = input.readUInt32();
           break;
         }
         case 48: {
           bitField0_ |= 0x00000020;
           tripDistanceMeters_ = input.readUInt32();
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return TripShutdownProto.internal_static_TripShutdown_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return TripShutdownProto.internal_static_TripShutdown_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           TripShutdownProto.TripShutdown.class, TripShutdownProto.TripShutdown.Builder.class);
 }

 public static com.google.protobuf.Parser<TripShutdown> PARSER =
     new com.google.protobuf.AbstractParser<TripShutdown>() {
   public TripShutdown parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new TripShutdown(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<TripShutdown> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int HEADER_FIELD_NUMBER = 1;
 private EventHeaderProto.EventHeader header_;
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public boolean hasHeader() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeader getHeader() {
   return header_;
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
   return header_;
 }

 public static final int TRIP_ID_FIELD_NUMBER = 2;
 private int tripId_;
 /**
  * <code>optional uint32 trip_id = 2;</code>
  *
  * <pre>
  * Trip identifier. Must match the one in TripStartup event.
  * </pre>
  */
 public boolean hasTripId() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional uint32 trip_id = 2;</code>
  *
  * <pre>
  * Trip identifier. Must match the one in TripStartup event.
  * </pre>
  */
 public int getTripId() {
   return tripId_;
 }

 public static final int TRIP_START_DELAY_SECONDS_FIELD_NUMBER = 3;
 private int tripStartDelaySeconds_;
 /**
  * <code>optional uint32 trip_start_delay_seconds = 3;</code>
  *
  * <pre>
  * Delay of trip startup in seconds. Precision: 1
  * </pre>
  */
 public boolean hasTripStartDelaySeconds() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional uint32 trip_start_delay_seconds = 3;</code>
  *
  * <pre>
  * Delay of trip startup in seconds. Precision: 1
  * </pre>
  */
 public int getTripStartDelaySeconds() {
   return tripStartDelaySeconds_;
 }

 public static final int GREEN_TIME_PERCENT_FIELD_NUMBER = 4;
 private int greenTimePercent_;
 /**
  * <code>optional uint32 green_time_percent = 4;</code>
  *
  * <pre>
  * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
  * </pre>
  */
 public boolean hasGreenTimePercent() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional uint32 green_time_percent = 4;</code>
  *
  * <pre>
  * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
  * </pre>
  */
 public int getGreenTimePercent() {
   return greenTimePercent_;
 }

 public static final int TRIP_DURATION_SECONDS_FIELD_NUMBER = 5;
 private int tripDurationSeconds_;
 /**
  * <code>optional uint32 trip_duration_seconds = 5;</code>
  *
  * <pre>
  * Total trip duration in seconds. Precision: 1
  * </pre>
  */
 public boolean hasTripDurationSeconds() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional uint32 trip_duration_seconds = 5;</code>
  *
  * <pre>
  * Total trip duration in seconds. Precision: 1
  * </pre>
  */
 public int getTripDurationSeconds() {
   return tripDurationSeconds_;
 }

 public static final int TRIP_DISTANCE_METERS_FIELD_NUMBER = 6;
 private int tripDistanceMeters_;
 /**
  * <code>optional uint32 trip_distance_meters = 6;</code>
  *
  * <pre>
  * Total trip distance (m). Precision: 1
  * </pre>
  */
 public boolean hasTripDistanceMeters() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional uint32 trip_distance_meters = 6;</code>
  *
  * <pre>
  * Total trip distance (m). Precision: 1
  * </pre>
  */
 public int getTripDistanceMeters() {
   return tripDistanceMeters_;
 }

 private void initFields() {
   header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   tripId_ = 0;
   tripStartDelaySeconds_ = 0;
   greenTimePercent_ = 0;
   tripDurationSeconds_ = 0;
   tripDistanceMeters_ = 0;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasHeader()) {
     memoizedIsInitialized = 0;
     return false;
   }
   if (!getHeader().isInitialized()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeMessage(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeUInt32(2, tripId_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeUInt32(3, tripStartDelaySeconds_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeUInt32(4, greenTimePercent_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeUInt32(5, tripDurationSeconds_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeUInt32(6, tripDistanceMeters_);
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeMessageSize(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(2, tripId_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(3, tripStartDelaySeconds_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(4, greenTimePercent_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(5, tripDurationSeconds_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(6, tripDistanceMeters_);
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static TripShutdownProto.TripShutdown parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static TripShutdownProto.TripShutdown parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static TripShutdownProto.TripShutdown parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static TripShutdownProto.TripShutdown parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static TripShutdownProto.TripShutdown parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static TripShutdownProto.TripShutdown parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static TripShutdownProto.TripShutdown parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static TripShutdownProto.TripShutdown parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static TripShutdownProto.TripShutdown parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static TripShutdownProto.TripShutdown parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(TripShutdownProto.TripShutdown prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code TripShutdown}
  *
  * <pre>
  * TripS hutdown
  * </pre>
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:TripShutdown)
     TripShutdownProto.TripShutdownOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return TripShutdownProto.internal_static_TripShutdown_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return TripShutdownProto.internal_static_TripShutdown_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             TripShutdownProto.TripShutdown.class, TripShutdownProto.TripShutdown.Builder.class);
   }

   // Construct using TripShutdownProto.TripShutdown.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
       getHeaderFieldBuilder();
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     tripId_ = 0;
     bitField0_ = (bitField0_ & ~0x00000002);
     tripStartDelaySeconds_ = 0;
     bitField0_ = (bitField0_ & ~0x00000004);
     greenTimePercent_ = 0;
     bitField0_ = (bitField0_ & ~0x00000008);
     tripDurationSeconds_ = 0;
     bitField0_ = (bitField0_ & ~0x00000010);
     tripDistanceMeters_ = 0;
     bitField0_ = (bitField0_ & ~0x00000020);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return TripShutdownProto.internal_static_TripShutdown_descriptor;
   }

   public TripShutdownProto.TripShutdown getDefaultInstanceForType() {
     return TripShutdownProto.TripShutdown.getDefaultInstance();
   }

   public TripShutdownProto.TripShutdown build() {
     TripShutdownProto.TripShutdown result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public TripShutdownProto.TripShutdown buildPartial() {
     TripShutdownProto.TripShutdown result = new TripShutdownProto.TripShutdown(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     if (headerBuilder_ == null) {
       result.header_ = header_;
     } else {
       result.header_ = headerBuilder_.build();
     }
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.tripId_ = tripId_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.tripStartDelaySeconds_ = tripStartDelaySeconds_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.greenTimePercent_ = greenTimePercent_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.tripDurationSeconds_ = tripDurationSeconds_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.tripDistanceMeters_ = tripDistanceMeters_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof TripShutdownProto.TripShutdown) {
       return mergeFrom((TripShutdownProto.TripShutdown)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(TripShutdownProto.TripShutdown other) {
     if (other == TripShutdownProto.TripShutdown.getDefaultInstance()) return this;
     if (other.hasHeader()) {
       mergeHeader(other.getHeader());
     }
     if (other.hasTripId()) {
       setTripId(other.getTripId());
     }
     if (other.hasTripStartDelaySeconds()) {
       setTripStartDelaySeconds(other.getTripStartDelaySeconds());
     }
     if (other.hasGreenTimePercent()) {
       setGreenTimePercent(other.getGreenTimePercent());
     }
     if (other.hasTripDurationSeconds()) {
       setTripDurationSeconds(other.getTripDurationSeconds());
     }
     if (other.hasTripDistanceMeters()) {
       setTripDistanceMeters(other.getTripDistanceMeters());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasHeader()) {
       
       return false;
     }
     if (!getHeader().isInitialized()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     TripShutdownProto.TripShutdown parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (TripShutdownProto.TripShutdown) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private EventHeaderProto.EventHeader header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> headerBuilder_;
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public boolean hasHeader() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader getHeader() {
     if (headerBuilder_ == null) {
       return header_;
     } else {
       return headerBuilder_.getMessage();
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (value == null) {
         throw new NullPointerException();
       }
       header_ = value;
       onChanged();
     } else {
       headerBuilder_.setMessage(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(
       EventHeaderProto.EventHeader.Builder builderForValue) {
     if (headerBuilder_ == null) {
       header_ = builderForValue.build();
       onChanged();
     } else {
       headerBuilder_.setMessage(builderForValue.build());
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder mergeHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (((bitField0_ & 0x00000001) == 0x00000001) &&
           header_ != EventHeaderProto.EventHeader.getDefaultInstance()) {
         header_ =
           EventHeaderProto.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
       } else {
         header_ = value;
       }
       onChanged();
     } else {
       headerBuilder_.mergeFrom(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder clearHeader() {
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
       onChanged();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader.Builder getHeaderBuilder() {
     bitField0_ |= 0x00000001;
     onChanged();
     return getHeaderFieldBuilder().getBuilder();
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
     if (headerBuilder_ != null) {
       return headerBuilder_.getMessageOrBuilder();
     } else {
       return header_;
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> 
       getHeaderFieldBuilder() {
     if (headerBuilder_ == null) {
       headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
           EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder>(
               getHeader(),
               getParentForChildren(),
               isClean());
       header_ = null;
     }
     return headerBuilder_;
   }

   private int tripId_ ;
   /**
    * <code>optional uint32 trip_id = 2;</code>
    *
    * <pre>
    * Trip identifier. Must match the one in TripStartup event.
    * </pre>
    */
   public boolean hasTripId() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional uint32 trip_id = 2;</code>
    *
    * <pre>
    * Trip identifier. Must match the one in TripStartup event.
    * </pre>
    */
   public int getTripId() {
     return tripId_;
   }
   /**
    * <code>optional uint32 trip_id = 2;</code>
    *
    * <pre>
    * Trip identifier. Must match the one in TripStartup event.
    * </pre>
    */
   public Builder setTripId(int value) {
     bitField0_ |= 0x00000002;
     tripId_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_id = 2;</code>
    *
    * <pre>
    * Trip identifier. Must match the one in TripStartup event.
    * </pre>
    */
   public Builder clearTripId() {
     bitField0_ = (bitField0_ & ~0x00000002);
     tripId_ = 0;
     onChanged();
     return this;
   }

   private int tripStartDelaySeconds_ ;
   /**
    * <code>optional uint32 trip_start_delay_seconds = 3;</code>
    *
    * <pre>
    * Delay of trip startup in seconds. Precision: 1
    * </pre>
    */
   public boolean hasTripStartDelaySeconds() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional uint32 trip_start_delay_seconds = 3;</code>
    *
    * <pre>
    * Delay of trip startup in seconds. Precision: 1
    * </pre>
    */
   public int getTripStartDelaySeconds() {
     return tripStartDelaySeconds_;
   }
   /**
    * <code>optional uint32 trip_start_delay_seconds = 3;</code>
    *
    * <pre>
    * Delay of trip startup in seconds. Precision: 1
    * </pre>
    */
   public Builder setTripStartDelaySeconds(int value) {
     bitField0_ |= 0x00000004;
     tripStartDelaySeconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_start_delay_seconds = 3;</code>
    *
    * <pre>
    * Delay of trip startup in seconds. Precision: 1
    * </pre>
    */
   public Builder clearTripStartDelaySeconds() {
     bitField0_ = (bitField0_ & ~0x00000004);
     tripStartDelaySeconds_ = 0;
     onChanged();
     return this;
   }

   private int greenTimePercent_ ;
   /**
    * <code>optional uint32 green_time_percent = 4;</code>
    *
    * <pre>
    * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
    * </pre>
    */
   public boolean hasGreenTimePercent() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional uint32 green_time_percent = 4;</code>
    *
    * <pre>
    * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
    * </pre>
    */
   public int getGreenTimePercent() {
     return greenTimePercent_;
   }
   /**
    * <code>optional uint32 green_time_percent = 4;</code>
    *
    * <pre>
    * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
    * </pre>
    */
   public Builder setGreenTimePercent(int value) {
     bitField0_ |= 0x00000008;
     greenTimePercent_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 green_time_percent = 4;</code>
    *
    * <pre>
    * Percent of trip while fuel economy is in green range. 0..100. Precision: 1.
    * </pre>
    */
   public Builder clearGreenTimePercent() {
     bitField0_ = (bitField0_ & ~0x00000008);
     greenTimePercent_ = 0;
     onChanged();
     return this;
   }

   private int tripDurationSeconds_ ;
   /**
    * <code>optional uint32 trip_duration_seconds = 5;</code>
    *
    * <pre>
    * Total trip duration in seconds. Precision: 1
    * </pre>
    */
   public boolean hasTripDurationSeconds() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional uint32 trip_duration_seconds = 5;</code>
    *
    * <pre>
    * Total trip duration in seconds. Precision: 1
    * </pre>
    */
   public int getTripDurationSeconds() {
     return tripDurationSeconds_;
   }
   /**
    * <code>optional uint32 trip_duration_seconds = 5;</code>
    *
    * <pre>
    * Total trip duration in seconds. Precision: 1
    * </pre>
    */
   public Builder setTripDurationSeconds(int value) {
     bitField0_ |= 0x00000010;
     tripDurationSeconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_duration_seconds = 5;</code>
    *
    * <pre>
    * Total trip duration in seconds. Precision: 1
    * </pre>
    */
   public Builder clearTripDurationSeconds() {
     bitField0_ = (bitField0_ & ~0x00000010);
     tripDurationSeconds_ = 0;
     onChanged();
     return this;
   }

   private int tripDistanceMeters_ ;
   /**
    * <code>optional uint32 trip_distance_meters = 6;</code>
    *
    * <pre>
    * Total trip distance (m). Precision: 1
    * </pre>
    */
   public boolean hasTripDistanceMeters() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional uint32 trip_distance_meters = 6;</code>
    *
    * <pre>
    * Total trip distance (m). Precision: 1
    * </pre>
    */
   public int getTripDistanceMeters() {
     return tripDistanceMeters_;
   }
   /**
    * <code>optional uint32 trip_distance_meters = 6;</code>
    *
    * <pre>
    * Total trip distance (m). Precision: 1
    * </pre>
    */
   public Builder setTripDistanceMeters(int value) {
     bitField0_ |= 0x00000020;
     tripDistanceMeters_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_distance_meters = 6;</code>
    *
    * <pre>
    * Total trip distance (m). Precision: 1
    * </pre>
    */
   public Builder clearTripDistanceMeters() {
     bitField0_ = (bitField0_ & ~0x00000020);
     tripDistanceMeters_ = 0;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:TripShutdown)
 }

 static {
   defaultInstance = new TripShutdown(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:TripShutdown)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_TripShutdown_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_TripShutdown_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\027TripShutdownProto.proto\032\026EventHeaderPr" +
   "oto.proto\"\270\001\n\014TripShutdown\022\034\n\006header\030\001 \002" +
   "(\0132\014.EventHeader\022\017\n\007trip_id\030\002 \001(\r\022 \n\030tri" +
   "p_start_delay_seconds\030\003 \001(\r\022\032\n\022green_tim" +
   "e_percent\030\004 \001(\r\022\035\n\025trip_duration_seconds" +
   "\030\005 \001(\r\022\034\n\024trip_distance_meters\030\006 \001(\r"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       EventHeaderProto.getDescriptor(),
     }, assigner);
 internal_static_TripShutdown_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_TripShutdown_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_TripShutdown_descriptor,
     new java.lang.String[] { "Header", "TripId", "TripStartDelaySeconds", "GreenTimePercent", "TripDurationSeconds", "TripDistanceMeters", });
 EventHeaderProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}
