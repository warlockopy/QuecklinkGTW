package ScopeProtoJava;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: EventHeaderProto.proto

public final class EventHeaderProto {
private EventHeaderProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface EventHeaderOrBuilder extends
   // @@protoc_insertion_point(interface_extends:EventHeader)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required uint32 TemplateId = 1;</code>
  *
  * <pre>
  * Protocol buffer template id
  * </pre>
  */
 boolean hasTemplateId();
 /**
  * <code>required uint32 TemplateId = 1;</code>
  *
  * <pre>
  * Protocol buffer template id
  * </pre>
  */
 int getTemplateId();

 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 boolean hasUnitId();
 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 java.lang.String getUnitId();
 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 com.google.protobuf.ByteString
     getUnitIdBytes();

 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 boolean hasDescription();
 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 java.lang.String getDescription();
 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 com.google.protobuf.ByteString
     getDescriptionBytes();

 /**
  * <code>optional uint64 UtcTimestampSeconds = 4;</code>
  *
  * <pre>
  * Seconds since 1970.01.01
  * </pre>
  */
 boolean hasUtcTimestampSeconds();
 /**
  * <code>optional uint64 UtcTimestampSeconds = 4;</code>
  *
  * <pre>
  * Seconds since 1970.01.01
  * </pre>
  */
 long getUtcTimestampSeconds();

 /**
  * <code>optional double Latitude = 5;</code>
  *
  * <pre>
  * Degrees -90...90
  * </pre>
  */
 boolean hasLatitude();
 /**
  * <code>optional double Latitude = 5;</code>
  *
  * <pre>
  * Degrees -90...90
  * </pre>
  */
 double getLatitude();

 /**
  * <code>optional double Longitude = 6;</code>
  *
  * <pre>
  * Degrees -180...180
  * </pre>
  */
 boolean hasLongitude();
 /**
  * <code>optional double Longitude = 6;</code>
  *
  * <pre>
  * Degrees -180...180
  * </pre>
  */
 double getLongitude();

 /**
  * <code>optional uint32 Speed = 7;</code>
  *
  * <pre>
  * Km/h
  * </pre>
  */
 boolean hasSpeed();
 /**
  * <code>optional uint32 Speed = 7;</code>
  *
  * <pre>
  * Km/h
  * </pre>
  */
 int getSpeed();

 /**
  * <code>optional uint32 Direction = 8;</code>
  *
  * <pre>
  * Degrees 0..360
  * </pre>
  */
 boolean hasDirection();
 /**
  * <code>optional uint32 Direction = 8;</code>
  *
  * <pre>
  * Degrees 0..360
  * </pre>
  */
 int getDirection();

 /**
  * <code>optional uint32 Odometer = 9;</code>
  *
  * <pre>
  * Kilometers
  * </pre>
  */
 boolean hasOdometer();
 /**
  * <code>optional uint32 Odometer = 9;</code>
  *
  * <pre>
  * Kilometers
  * </pre>
  */
 int getOdometer();

 /**
  * <code>optional uint32 InputStatus = 10;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 boolean hasInputStatus();
 /**
  * <code>optional uint32 InputStatus = 10;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 int getInputStatus();

 /**
  * <code>optional uint32 OutputStatus = 11;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 boolean hasOutputStatus();
 /**
  * <code>optional uint32 OutputStatus = 11;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 int getOutputStatus();

 /**
  * <code>optional uint32 DriverKeyCode = 12;</code>
  *
  * <pre>
  * Driver identifier
  * </pre>
  */
 boolean hasDriverKeyCode();
 /**
  * <code>optional uint32 DriverKeyCode = 12;</code>
  *
  * <pre>
  * Driver identifier
  * </pre>
  */
 int getDriverKeyCode();

 /**
  * <code>optional uint32 Source = 13;</code>
  *
  * <pre>
  * Not used for incoming events
  * </pre>
  */
 boolean hasSource();
 /**
  * <code>optional uint32 Source = 13;</code>
  *
  * <pre>
  * Not used for incoming events
  * </pre>
  */
 int getSource();

 /**
  * <code>optional uint32 GeneralStatus = 14;</code>
  *
  * <pre>
  * General Status flags (Use GeneralStatusType enum to check which flags have been set)
  * </pre>
  */
 boolean hasGeneralStatus();
 /**
  * <code>optional uint32 GeneralStatus = 14;</code>
  *
  * <pre>
  * General Status flags (Use GeneralStatusType enum to check which flags have been set)
  * </pre>
  */
 int getGeneralStatus();

 /**
  * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
  *
  * <pre>
  * Trip speed source
  * </pre>
  */
 boolean hasTripSpeedSource();
 /**
  * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
  *
  * <pre>
  * Trip speed source
  * </pre>
  */
 TripSpeedSourceProto.TripSpeedSource getTripSpeedSource();
}
/**
* Protobuf type {@code EventHeader}
*/
public static final class EventHeader extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:EventHeader)
   EventHeaderOrBuilder {
 // Use EventHeader.newBuilder() to construct.
 private EventHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private EventHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final EventHeader defaultInstance;
 public static EventHeader getDefaultInstance() {
   return defaultInstance;
 }

 public EventHeader getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private EventHeader(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 8: {
           bitField0_ |= 0x00000001;
           templateId_ = input.readUInt32();
           break;
         }
         case 18: {
           com.google.protobuf.ByteString bs = input.readBytes();
           bitField0_ |= 0x00000002;
           unitId_ = bs;
           break;
         }
         case 26: {
           com.google.protobuf.ByteString bs = input.readBytes();
           bitField0_ |= 0x00000004;
           description_ = bs;
           break;
         }
         case 32: {
           bitField0_ |= 0x00000008;
           utcTimestampSeconds_ = input.readUInt64();
           break;
         }
         case 41: {
           bitField0_ |= 0x00000010;
           latitude_ = input.readDouble();
           break;
         }
         case 49: {
           bitField0_ |= 0x00000020;
           longitude_ = input.readDouble();
           break;
         }
         case 56: {
           bitField0_ |= 0x00000040;
           speed_ = input.readUInt32();
           break;
         }
         case 64: {
           bitField0_ |= 0x00000080;
           direction_ = input.readUInt32();
           break;
         }
         case 72: {
           bitField0_ |= 0x00000100;
           odometer_ = input.readUInt32();
           break;
         }
         case 80: {
           bitField0_ |= 0x00000200;
           inputStatus_ = input.readUInt32();
           break;
         }
         case 88: {
           bitField0_ |= 0x00000400;
           outputStatus_ = input.readUInt32();
           break;
         }
         case 96: {
           bitField0_ |= 0x00000800;
           driverKeyCode_ = input.readUInt32();
           break;
         }
         case 104: {
           bitField0_ |= 0x00001000;
           source_ = input.readUInt32();
           break;
         }
         case 112: {
           bitField0_ |= 0x00002000;
           generalStatus_ = input.readUInt32();
           break;
         }
         case 136: {
           int rawValue = input.readEnum();
           TripSpeedSourceProto.TripSpeedSource value = TripSpeedSourceProto.TripSpeedSource.valueOf(rawValue);
           if (value == null) {
             unknownFields.mergeVarintField(17, rawValue);
           } else {
             bitField0_ |= 0x00004000;
             tripSpeedSource_ = value;
           }
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return EventHeaderProto.internal_static_EventHeader_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return EventHeaderProto.internal_static_EventHeader_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           EventHeaderProto.EventHeader.class, EventHeaderProto.EventHeader.Builder.class);
 }

 public static com.google.protobuf.Parser<EventHeader> PARSER =
     new com.google.protobuf.AbstractParser<EventHeader>() {
   public EventHeader parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new EventHeader(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<EventHeader> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int TEMPLATEID_FIELD_NUMBER = 1;
 private int templateId_;
 /**
  * <code>required uint32 TemplateId = 1;</code>
  *
  * <pre>
  * Protocol buffer template id
  * </pre>
  */
 public boolean hasTemplateId() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required uint32 TemplateId = 1;</code>
  *
  * <pre>
  * Protocol buffer template id
  * </pre>
  */
 public int getTemplateId() {
   return templateId_;
 }

 public static final int UNITID_FIELD_NUMBER = 2;
 private java.lang.Object unitId_;
 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 public boolean hasUnitId() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 public java.lang.String getUnitId() {
   java.lang.Object ref = unitId_;
   if (ref instanceof java.lang.String) {
     return (java.lang.String) ref;
   } else {
     com.google.protobuf.ByteString bs = 
         (com.google.protobuf.ByteString) ref;
     java.lang.String s = bs.toStringUtf8();
     if (bs.isValidUtf8()) {
       unitId_ = s;
     }
     return s;
   }
 }
 /**
  * <code>optional string UnitId = 2;</code>
  *
  * <pre>
  * Unit identifier
  * </pre>
  */
 public com.google.protobuf.ByteString
     getUnitIdBytes() {
   java.lang.Object ref = unitId_;
   if (ref instanceof java.lang.String) {
     com.google.protobuf.ByteString b = 
         com.google.protobuf.ByteString.copyFromUtf8(
             (java.lang.String) ref);
     unitId_ = b;
     return b;
   } else {
     return (com.google.protobuf.ByteString) ref;
   }
 }

 public static final int DESCRIPTION_FIELD_NUMBER = 3;
 private java.lang.Object description_;
 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 public boolean hasDescription() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 public java.lang.String getDescription() {
   java.lang.Object ref = description_;
   if (ref instanceof java.lang.String) {
     return (java.lang.String) ref;
   } else {
     com.google.protobuf.ByteString bs = 
         (com.google.protobuf.ByteString) ref;
     java.lang.String s = bs.toStringUtf8();
     if (bs.isValidUtf8()) {
       description_ = s;
     }
     return s;
   }
 }
 /**
  * <code>optional string Description = 3;</code>
  *
  * <pre>
  * Event description
  * </pre>
  */
 public com.google.protobuf.ByteString
     getDescriptionBytes() {
   java.lang.Object ref = description_;
   if (ref instanceof java.lang.String) {
     com.google.protobuf.ByteString b = 
         com.google.protobuf.ByteString.copyFromUtf8(
             (java.lang.String) ref);
     description_ = b;
     return b;
   } else {
     return (com.google.protobuf.ByteString) ref;
   }
 }

 public static final int UTCTIMESTAMPSECONDS_FIELD_NUMBER = 4;
 private long utcTimestampSeconds_;
 /**
  * <code>optional uint64 UtcTimestampSeconds = 4;</code>
  *
  * <pre>
  * Seconds since 1970.01.01
  * </pre>
  */
 public boolean hasUtcTimestampSeconds() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional uint64 UtcTimestampSeconds = 4;</code>
  *
  * <pre>
  * Seconds since 1970.01.01
  * </pre>
  */
 public long getUtcTimestampSeconds() {
   return utcTimestampSeconds_;
 }

 public static final int LATITUDE_FIELD_NUMBER = 5;
 private double latitude_;
 /**
  * <code>optional double Latitude = 5;</code>
  *
  * <pre>
  * Degrees -90...90
  * </pre>
  */
 public boolean hasLatitude() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional double Latitude = 5;</code>
  *
  * <pre>
  * Degrees -90...90
  * </pre>
  */
 public double getLatitude() {
   return latitude_;
 }

 public static final int LONGITUDE_FIELD_NUMBER = 6;
 private double longitude_;
 /**
  * <code>optional double Longitude = 6;</code>
  *
  * <pre>
  * Degrees -180...180
  * </pre>
  */
 public boolean hasLongitude() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional double Longitude = 6;</code>
  *
  * <pre>
  * Degrees -180...180
  * </pre>
  */
 public double getLongitude() {
   return longitude_;
 }

 public static final int SPEED_FIELD_NUMBER = 7;
 private int speed_;
 /**
  * <code>optional uint32 Speed = 7;</code>
  *
  * <pre>
  * Km/h
  * </pre>
  */
 public boolean hasSpeed() {
   return ((bitField0_ & 0x00000040) == 0x00000040);
 }
 /**
  * <code>optional uint32 Speed = 7;</code>
  *
  * <pre>
  * Km/h
  * </pre>
  */
 public int getSpeed() {
   return speed_;
 }

 public static final int DIRECTION_FIELD_NUMBER = 8;
 private int direction_;
 /**
  * <code>optional uint32 Direction = 8;</code>
  *
  * <pre>
  * Degrees 0..360
  * </pre>
  */
 public boolean hasDirection() {
   return ((bitField0_ & 0x00000080) == 0x00000080);
 }
 /**
  * <code>optional uint32 Direction = 8;</code>
  *
  * <pre>
  * Degrees 0..360
  * </pre>
  */
 public int getDirection() {
   return direction_;
 }

 public static final int ODOMETER_FIELD_NUMBER = 9;
 private int odometer_;
 /**
  * <code>optional uint32 Odometer = 9;</code>
  *
  * <pre>
  * Kilometers
  * </pre>
  */
 public boolean hasOdometer() {
   return ((bitField0_ & 0x00000100) == 0x00000100);
 }
 /**
  * <code>optional uint32 Odometer = 9;</code>
  *
  * <pre>
  * Kilometers
  * </pre>
  */
 public int getOdometer() {
   return odometer_;
 }

 public static final int INPUTSTATUS_FIELD_NUMBER = 10;
 private int inputStatus_;
 /**
  * <code>optional uint32 InputStatus = 10;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 public boolean hasInputStatus() {
   return ((bitField0_ & 0x00000200) == 0x00000200);
 }
 /**
  * <code>optional uint32 InputStatus = 10;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 public int getInputStatus() {
   return inputStatus_;
 }

 public static final int OUTPUTSTATUS_FIELD_NUMBER = 11;
 private int outputStatus_;
 /**
  * <code>optional uint32 OutputStatus = 11;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 public boolean hasOutputStatus() {
   return ((bitField0_ & 0x00000400) == 0x00000400);
 }
 /**
  * <code>optional uint32 OutputStatus = 11;</code>
  *
  * <pre>
  * Bitmask
  * </pre>
  */
 public int getOutputStatus() {
   return outputStatus_;
 }

 public static final int DRIVERKEYCODE_FIELD_NUMBER = 12;
 private int driverKeyCode_;
 /**
  * <code>optional uint32 DriverKeyCode = 12;</code>
  *
  * <pre>
  * Driver identifier
  * </pre>
  */
 public boolean hasDriverKeyCode() {
   return ((bitField0_ & 0x00000800) == 0x00000800);
 }
 /**
  * <code>optional uint32 DriverKeyCode = 12;</code>
  *
  * <pre>
  * Driver identifier
  * </pre>
  */
 public int getDriverKeyCode() {
   return driverKeyCode_;
 }

 public static final int SOURCE_FIELD_NUMBER = 13;
 private int source_;
 /**
  * <code>optional uint32 Source = 13;</code>
  *
  * <pre>
  * Not used for incoming events
  * </pre>
  */
 public boolean hasSource() {
   return ((bitField0_ & 0x00001000) == 0x00001000);
 }
 /**
  * <code>optional uint32 Source = 13;</code>
  *
  * <pre>
  * Not used for incoming events
  * </pre>
  */
 public int getSource() {
   return source_;
 }

 public static final int GENERALSTATUS_FIELD_NUMBER = 14;
 private int generalStatus_;
 /**
  * <code>optional uint32 GeneralStatus = 14;</code>
  *
  * <pre>
  * General Status flags (Use GeneralStatusType enum to check which flags have been set)
  * </pre>
  */
 public boolean hasGeneralStatus() {
   return ((bitField0_ & 0x00002000) == 0x00002000);
 }
 /**
  * <code>optional uint32 GeneralStatus = 14;</code>
  *
  * <pre>
  * General Status flags (Use GeneralStatusType enum to check which flags have been set)
  * </pre>
  */
 public int getGeneralStatus() {
   return generalStatus_;
 }

 public static final int TRIPSPEEDSOURCE_FIELD_NUMBER = 17;
 private TripSpeedSourceProto.TripSpeedSource tripSpeedSource_;
 /**
  * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
  *
  * <pre>
  * Trip speed source
  * </pre>
  */
 public boolean hasTripSpeedSource() {
   return ((bitField0_ & 0x00004000) == 0x00004000);
 }
 /**
  * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
  *
  * <pre>
  * Trip speed source
  * </pre>
  */
 public TripSpeedSourceProto.TripSpeedSource getTripSpeedSource() {
   return tripSpeedSource_;
 }

 private void initFields() {
   templateId_ = 0;
   unitId_ = "";
   description_ = "";
   utcTimestampSeconds_ = 0L;
   latitude_ = 0D;
   longitude_ = 0D;
   speed_ = 0;
   direction_ = 0;
   odometer_ = 0;
   inputStatus_ = 0;
   outputStatus_ = 0;
   driverKeyCode_ = 0;
   source_ = 0;
   generalStatus_ = 0;
   tripSpeedSource_ = TripSpeedSourceProto.TripSpeedSource.TRIP_SPEED_SOURCE_NOT_SUPPORTED;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasTemplateId()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeUInt32(1, templateId_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeBytes(2, getUnitIdBytes());
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeBytes(3, getDescriptionBytes());
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeUInt64(4, utcTimestampSeconds_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeDouble(5, latitude_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeDouble(6, longitude_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     output.writeUInt32(7, speed_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     output.writeUInt32(8, direction_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     output.writeUInt32(9, odometer_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     output.writeUInt32(10, inputStatus_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     output.writeUInt32(11, outputStatus_);
   }
   if (((bitField0_ & 0x00000800) == 0x00000800)) {
     output.writeUInt32(12, driverKeyCode_);
   }
   if (((bitField0_ & 0x00001000) == 0x00001000)) {
     output.writeUInt32(13, source_);
   }
   if (((bitField0_ & 0x00002000) == 0x00002000)) {
     output.writeUInt32(14, generalStatus_);
   }
   if (((bitField0_ & 0x00004000) == 0x00004000)) {
     output.writeEnum(17, tripSpeedSource_.getNumber());
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(1, templateId_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBytesSize(2, getUnitIdBytes());
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBytesSize(3, getDescriptionBytes());
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt64Size(4, utcTimestampSeconds_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeDoubleSize(5, latitude_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeDoubleSize(6, longitude_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(7, speed_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(8, direction_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(9, odometer_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(10, inputStatus_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(11, outputStatus_);
   }
   if (((bitField0_ & 0x00000800) == 0x00000800)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(12, driverKeyCode_);
   }
   if (((bitField0_ & 0x00001000) == 0x00001000)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(13, source_);
   }
   if (((bitField0_ & 0x00002000) == 0x00002000)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(14, generalStatus_);
   }
   if (((bitField0_ & 0x00004000) == 0x00004000)) {
     size += com.google.protobuf.CodedOutputStream
       .computeEnumSize(17, tripSpeedSource_.getNumber());
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static EventHeaderProto.EventHeader parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static EventHeaderProto.EventHeader parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static EventHeaderProto.EventHeader parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static EventHeaderProto.EventHeader parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static EventHeaderProto.EventHeader parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static EventHeaderProto.EventHeader parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static EventHeaderProto.EventHeader parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static EventHeaderProto.EventHeader parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static EventHeaderProto.EventHeader parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static EventHeaderProto.EventHeader parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(EventHeaderProto.EventHeader prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code EventHeader}
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:EventHeader)
     EventHeaderProto.EventHeaderOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return EventHeaderProto.internal_static_EventHeader_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return EventHeaderProto.internal_static_EventHeader_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             EventHeaderProto.EventHeader.class, EventHeaderProto.EventHeader.Builder.class);
   }

   // Construct using EventHeaderProto.EventHeader.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     templateId_ = 0;
     bitField0_ = (bitField0_ & ~0x00000001);
     unitId_ = "";
     bitField0_ = (bitField0_ & ~0x00000002);
     description_ = "";
     bitField0_ = (bitField0_ & ~0x00000004);
     utcTimestampSeconds_ = 0L;
     bitField0_ = (bitField0_ & ~0x00000008);
     latitude_ = 0D;
     bitField0_ = (bitField0_ & ~0x00000010);
     longitude_ = 0D;
     bitField0_ = (bitField0_ & ~0x00000020);
     speed_ = 0;
     bitField0_ = (bitField0_ & ~0x00000040);
     direction_ = 0;
     bitField0_ = (bitField0_ & ~0x00000080);
     odometer_ = 0;
     bitField0_ = (bitField0_ & ~0x00000100);
     inputStatus_ = 0;
     bitField0_ = (bitField0_ & ~0x00000200);
     outputStatus_ = 0;
     bitField0_ = (bitField0_ & ~0x00000400);
     driverKeyCode_ = 0;
     bitField0_ = (bitField0_ & ~0x00000800);
     source_ = 0;
     bitField0_ = (bitField0_ & ~0x00001000);
     generalStatus_ = 0;
     bitField0_ = (bitField0_ & ~0x00002000);
     tripSpeedSource_ = TripSpeedSourceProto.TripSpeedSource.TRIP_SPEED_SOURCE_NOT_SUPPORTED;
     bitField0_ = (bitField0_ & ~0x00004000);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return EventHeaderProto.internal_static_EventHeader_descriptor;
   }

   public EventHeaderProto.EventHeader getDefaultInstanceForType() {
     return EventHeaderProto.EventHeader.getDefaultInstance();
   }

   public EventHeaderProto.EventHeader build() {
     EventHeaderProto.EventHeader result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public EventHeaderProto.EventHeader buildPartial() {
     EventHeaderProto.EventHeader result = new EventHeaderProto.EventHeader(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     result.templateId_ = templateId_;
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.unitId_ = unitId_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.description_ = description_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.utcTimestampSeconds_ = utcTimestampSeconds_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.latitude_ = latitude_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.longitude_ = longitude_;
     if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
       to_bitField0_ |= 0x00000040;
     }
     result.speed_ = speed_;
     if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
       to_bitField0_ |= 0x00000080;
     }
     result.direction_ = direction_;
     if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
       to_bitField0_ |= 0x00000100;
     }
     result.odometer_ = odometer_;
     if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
       to_bitField0_ |= 0x00000200;
     }
     result.inputStatus_ = inputStatus_;
     if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
       to_bitField0_ |= 0x00000400;
     }
     result.outputStatus_ = outputStatus_;
     if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
       to_bitField0_ |= 0x00000800;
     }
     result.driverKeyCode_ = driverKeyCode_;
     if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
       to_bitField0_ |= 0x00001000;
     }
     result.source_ = source_;
     if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
       to_bitField0_ |= 0x00002000;
     }
     result.generalStatus_ = generalStatus_;
     if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
       to_bitField0_ |= 0x00004000;
     }
     result.tripSpeedSource_ = tripSpeedSource_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof EventHeaderProto.EventHeader) {
       return mergeFrom((EventHeaderProto.EventHeader)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(EventHeaderProto.EventHeader other) {
     if (other == EventHeaderProto.EventHeader.getDefaultInstance()) return this;
     if (other.hasTemplateId()) {
       setTemplateId(other.getTemplateId());
     }
     if (other.hasUnitId()) {
       bitField0_ |= 0x00000002;
       unitId_ = other.unitId_;
       onChanged();
     }
     if (other.hasDescription()) {
       bitField0_ |= 0x00000004;
       description_ = other.description_;
       onChanged();
     }
     if (other.hasUtcTimestampSeconds()) {
       setUtcTimestampSeconds(other.getUtcTimestampSeconds());
     }
     if (other.hasLatitude()) {
       setLatitude(other.getLatitude());
     }
     if (other.hasLongitude()) {
       setLongitude(other.getLongitude());
     }
     if (other.hasSpeed()) {
       setSpeed(other.getSpeed());
     }
     if (other.hasDirection()) {
       setDirection(other.getDirection());
     }
     if (other.hasOdometer()) {
       setOdometer(other.getOdometer());
     }
     if (other.hasInputStatus()) {
       setInputStatus(other.getInputStatus());
     }
     if (other.hasOutputStatus()) {
       setOutputStatus(other.getOutputStatus());
     }
     if (other.hasDriverKeyCode()) {
       setDriverKeyCode(other.getDriverKeyCode());
     }
     if (other.hasSource()) {
       setSource(other.getSource());
     }
     if (other.hasGeneralStatus()) {
       setGeneralStatus(other.getGeneralStatus());
     }
     if (other.hasTripSpeedSource()) {
       setTripSpeedSource(other.getTripSpeedSource());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasTemplateId()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     EventHeaderProto.EventHeader parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (EventHeaderProto.EventHeader) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private int templateId_ ;
   /**
    * <code>required uint32 TemplateId = 1;</code>
    *
    * <pre>
    * Protocol buffer template id
    * </pre>
    */
   public boolean hasTemplateId() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required uint32 TemplateId = 1;</code>
    *
    * <pre>
    * Protocol buffer template id
    * </pre>
    */
   public int getTemplateId() {
     return templateId_;
   }
   /**
    * <code>required uint32 TemplateId = 1;</code>
    *
    * <pre>
    * Protocol buffer template id
    * </pre>
    */
   public Builder setTemplateId(int value) {
     bitField0_ |= 0x00000001;
     templateId_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>required uint32 TemplateId = 1;</code>
    *
    * <pre>
    * Protocol buffer template id
    * </pre>
    */
   public Builder clearTemplateId() {
     bitField0_ = (bitField0_ & ~0x00000001);
     templateId_ = 0;
     onChanged();
     return this;
   }

   private java.lang.Object unitId_ = "";
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public boolean hasUnitId() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public java.lang.String getUnitId() {
     java.lang.Object ref = unitId_;
     if (!(ref instanceof java.lang.String)) {
       com.google.protobuf.ByteString bs =
           (com.google.protobuf.ByteString) ref;
       java.lang.String s = bs.toStringUtf8();
       if (bs.isValidUtf8()) {
         unitId_ = s;
       }
       return s;
     } else {
       return (java.lang.String) ref;
     }
   }
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public com.google.protobuf.ByteString
       getUnitIdBytes() {
     java.lang.Object ref = unitId_;
     if (ref instanceof String) {
       com.google.protobuf.ByteString b = 
           com.google.protobuf.ByteString.copyFromUtf8(
               (java.lang.String) ref);
       unitId_ = b;
       return b;
     } else {
       return (com.google.protobuf.ByteString) ref;
     }
   }
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public Builder setUnitId(
       java.lang.String value) {
     if (value == null) {
 throw new NullPointerException();
}
bitField0_ |= 0x00000002;
     unitId_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public Builder clearUnitId() {
     bitField0_ = (bitField0_ & ~0x00000002);
     unitId_ = getDefaultInstance().getUnitId();
     onChanged();
     return this;
   }
   /**
    * <code>optional string UnitId = 2;</code>
    *
    * <pre>
    * Unit identifier
    * </pre>
    */
   public Builder setUnitIdBytes(
       com.google.protobuf.ByteString value) {
     if (value == null) {
 throw new NullPointerException();
}
bitField0_ |= 0x00000002;
     unitId_ = value;
     onChanged();
     return this;
   }

   private java.lang.Object description_ = "";
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public boolean hasDescription() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public java.lang.String getDescription() {
     java.lang.Object ref = description_;
     if (!(ref instanceof java.lang.String)) {
       com.google.protobuf.ByteString bs =
           (com.google.protobuf.ByteString) ref;
       java.lang.String s = bs.toStringUtf8();
       if (bs.isValidUtf8()) {
         description_ = s;
       }
       return s;
     } else {
       return (java.lang.String) ref;
     }
   }
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public com.google.protobuf.ByteString
       getDescriptionBytes() {
     java.lang.Object ref = description_;
     if (ref instanceof String) {
       com.google.protobuf.ByteString b = 
           com.google.protobuf.ByteString.copyFromUtf8(
               (java.lang.String) ref);
       description_ = b;
       return b;
     } else {
       return (com.google.protobuf.ByteString) ref;
     }
   }
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public Builder setDescription(
       java.lang.String value) {
     if (value == null) {
 throw new NullPointerException();
}
bitField0_ |= 0x00000004;
     description_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public Builder clearDescription() {
     bitField0_ = (bitField0_ & ~0x00000004);
     description_ = getDefaultInstance().getDescription();
     onChanged();
     return this;
   }
   /**
    * <code>optional string Description = 3;</code>
    *
    * <pre>
    * Event description
    * </pre>
    */
   public Builder setDescriptionBytes(
       com.google.protobuf.ByteString value) {
     if (value == null) {
 throw new NullPointerException();
}
bitField0_ |= 0x00000004;
     description_ = value;
     onChanged();
     return this;
   }

   private long utcTimestampSeconds_ ;
   /**
    * <code>optional uint64 UtcTimestampSeconds = 4;</code>
    *
    * <pre>
    * Seconds since 1970.01.01
    * </pre>
    */
   public boolean hasUtcTimestampSeconds() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional uint64 UtcTimestampSeconds = 4;</code>
    *
    * <pre>
    * Seconds since 1970.01.01
    * </pre>
    */
   public long getUtcTimestampSeconds() {
     return utcTimestampSeconds_;
   }
   /**
    * <code>optional uint64 UtcTimestampSeconds = 4;</code>
    *
    * <pre>
    * Seconds since 1970.01.01
    * </pre>
    */
   public Builder setUtcTimestampSeconds(long value) {
     bitField0_ |= 0x00000008;
     utcTimestampSeconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint64 UtcTimestampSeconds = 4;</code>
    *
    * <pre>
    * Seconds since 1970.01.01
    * </pre>
    */
   public Builder clearUtcTimestampSeconds() {
     bitField0_ = (bitField0_ & ~0x00000008);
     utcTimestampSeconds_ = 0L;
     onChanged();
     return this;
   }

   private double latitude_ ;
   /**
    * <code>optional double Latitude = 5;</code>
    *
    * <pre>
    * Degrees -90...90
    * </pre>
    */
   public boolean hasLatitude() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional double Latitude = 5;</code>
    *
    * <pre>
    * Degrees -90...90
    * </pre>
    */
   public double getLatitude() {
     return latitude_;
   }
   /**
    * <code>optional double Latitude = 5;</code>
    *
    * <pre>
    * Degrees -90...90
    * </pre>
    */
   public Builder setLatitude(double value) {
     bitField0_ |= 0x00000010;
     latitude_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional double Latitude = 5;</code>
    *
    * <pre>
    * Degrees -90...90
    * </pre>
    */
   public Builder clearLatitude() {
     bitField0_ = (bitField0_ & ~0x00000010);
     latitude_ = 0D;
     onChanged();
     return this;
   }

   private double longitude_ ;
   /**
    * <code>optional double Longitude = 6;</code>
    *
    * <pre>
    * Degrees -180...180
    * </pre>
    */
   public boolean hasLongitude() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional double Longitude = 6;</code>
    *
    * <pre>
    * Degrees -180...180
    * </pre>
    */
   public double getLongitude() {
     return longitude_;
   }
   /**
    * <code>optional double Longitude = 6;</code>
    *
    * <pre>
    * Degrees -180...180
    * </pre>
    */
   public Builder setLongitude(double value) {
     bitField0_ |= 0x00000020;
     longitude_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional double Longitude = 6;</code>
    *
    * <pre>
    * Degrees -180...180
    * </pre>
    */
   public Builder clearLongitude() {
     bitField0_ = (bitField0_ & ~0x00000020);
     longitude_ = 0D;
     onChanged();
     return this;
   }

   private int speed_ ;
   /**
    * <code>optional uint32 Speed = 7;</code>
    *
    * <pre>
    * Km/h
    * </pre>
    */
   public boolean hasSpeed() {
     return ((bitField0_ & 0x00000040) == 0x00000040);
   }
   /**
    * <code>optional uint32 Speed = 7;</code>
    *
    * <pre>
    * Km/h
    * </pre>
    */
   public int getSpeed() {
     return speed_;
   }
   /**
    * <code>optional uint32 Speed = 7;</code>
    *
    * <pre>
    * Km/h
    * </pre>
    */
   public Builder setSpeed(int value) {
     bitField0_ |= 0x00000040;
     speed_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 Speed = 7;</code>
    *
    * <pre>
    * Km/h
    * </pre>
    */
   public Builder clearSpeed() {
     bitField0_ = (bitField0_ & ~0x00000040);
     speed_ = 0;
     onChanged();
     return this;
   }

   private int direction_ ;
   /**
    * <code>optional uint32 Direction = 8;</code>
    *
    * <pre>
    * Degrees 0..360
    * </pre>
    */
   public boolean hasDirection() {
     return ((bitField0_ & 0x00000080) == 0x00000080);
   }
   /**
    * <code>optional uint32 Direction = 8;</code>
    *
    * <pre>
    * Degrees 0..360
    * </pre>
    */
   public int getDirection() {
     return direction_;
   }
   /**
    * <code>optional uint32 Direction = 8;</code>
    *
    * <pre>
    * Degrees 0..360
    * </pre>
    */
   public Builder setDirection(int value) {
     bitField0_ |= 0x00000080;
     direction_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 Direction = 8;</code>
    *
    * <pre>
    * Degrees 0..360
    * </pre>
    */
   public Builder clearDirection() {
     bitField0_ = (bitField0_ & ~0x00000080);
     direction_ = 0;
     onChanged();
     return this;
   }

   private int odometer_ ;
   /**
    * <code>optional uint32 Odometer = 9;</code>
    *
    * <pre>
    * Kilometers
    * </pre>
    */
   public boolean hasOdometer() {
     return ((bitField0_ & 0x00000100) == 0x00000100);
   }
   /**
    * <code>optional uint32 Odometer = 9;</code>
    *
    * <pre>
    * Kilometers
    * </pre>
    */
   public int getOdometer() {
     return odometer_;
   }
   /**
    * <code>optional uint32 Odometer = 9;</code>
    *
    * <pre>
    * Kilometers
    * </pre>
    */
   public Builder setOdometer(int value) {
     bitField0_ |= 0x00000100;
     odometer_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 Odometer = 9;</code>
    *
    * <pre>
    * Kilometers
    * </pre>
    */
   public Builder clearOdometer() {
     bitField0_ = (bitField0_ & ~0x00000100);
     odometer_ = 0;
     onChanged();
     return this;
   }

   private int inputStatus_ ;
   /**
    * <code>optional uint32 InputStatus = 10;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public boolean hasInputStatus() {
     return ((bitField0_ & 0x00000200) == 0x00000200);
   }
   /**
    * <code>optional uint32 InputStatus = 10;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public int getInputStatus() {
     return inputStatus_;
   }
   /**
    * <code>optional uint32 InputStatus = 10;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public Builder setInputStatus(int value) {
     bitField0_ |= 0x00000200;
     inputStatus_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 InputStatus = 10;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public Builder clearInputStatus() {
     bitField0_ = (bitField0_ & ~0x00000200);
     inputStatus_ = 0;
     onChanged();
     return this;
   }

   private int outputStatus_ ;
   /**
    * <code>optional uint32 OutputStatus = 11;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public boolean hasOutputStatus() {
     return ((bitField0_ & 0x00000400) == 0x00000400);
   }
   /**
    * <code>optional uint32 OutputStatus = 11;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public int getOutputStatus() {
     return outputStatus_;
   }
   /**
    * <code>optional uint32 OutputStatus = 11;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public Builder setOutputStatus(int value) {
     bitField0_ |= 0x00000400;
     outputStatus_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 OutputStatus = 11;</code>
    *
    * <pre>
    * Bitmask
    * </pre>
    */
   public Builder clearOutputStatus() {
     bitField0_ = (bitField0_ & ~0x00000400);
     outputStatus_ = 0;
     onChanged();
     return this;
   }

   private int driverKeyCode_ ;
   /**
    * <code>optional uint32 DriverKeyCode = 12;</code>
    *
    * <pre>
    * Driver identifier
    * </pre>
    */
   public boolean hasDriverKeyCode() {
     return ((bitField0_ & 0x00000800) == 0x00000800);
   }
   /**
    * <code>optional uint32 DriverKeyCode = 12;</code>
    *
    * <pre>
    * Driver identifier
    * </pre>
    */
   public int getDriverKeyCode() {
     return driverKeyCode_;
   }
   /**
    * <code>optional uint32 DriverKeyCode = 12;</code>
    *
    * <pre>
    * Driver identifier
    * </pre>
    */
   public Builder setDriverKeyCode(int value) {
     bitField0_ |= 0x00000800;
     driverKeyCode_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 DriverKeyCode = 12;</code>
    *
    * <pre>
    * Driver identifier
    * </pre>
    */
   public Builder clearDriverKeyCode() {
     bitField0_ = (bitField0_ & ~0x00000800);
     driverKeyCode_ = 0;
     onChanged();
     return this;
   }

   private int source_ ;
   /**
    * <code>optional uint32 Source = 13;</code>
    *
    * <pre>
    * Not used for incoming events
    * </pre>
    */
   public boolean hasSource() {
     return ((bitField0_ & 0x00001000) == 0x00001000);
   }
   /**
    * <code>optional uint32 Source = 13;</code>
    *
    * <pre>
    * Not used for incoming events
    * </pre>
    */
   public int getSource() {
     return source_;
   }
   /**
    * <code>optional uint32 Source = 13;</code>
    *
    * <pre>
    * Not used for incoming events
    * </pre>
    */
   public Builder setSource(int value) {
     bitField0_ |= 0x00001000;
     source_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 Source = 13;</code>
    *
    * <pre>
    * Not used for incoming events
    * </pre>
    */
   public Builder clearSource() {
     bitField0_ = (bitField0_ & ~0x00001000);
     source_ = 0;
     onChanged();
     return this;
   }

   private int generalStatus_ ;
   /**
    * <code>optional uint32 GeneralStatus = 14;</code>
    *
    * <pre>
    * General Status flags (Use GeneralStatusType enum to check which flags have been set)
    * </pre>
    */
   public boolean hasGeneralStatus() {
     return ((bitField0_ & 0x00002000) == 0x00002000);
   }
   /**
    * <code>optional uint32 GeneralStatus = 14;</code>
    *
    * <pre>
    * General Status flags (Use GeneralStatusType enum to check which flags have been set)
    * </pre>
    */
   public int getGeneralStatus() {
     return generalStatus_;
   }
   /**
    * <code>optional uint32 GeneralStatus = 14;</code>
    *
    * <pre>
    * General Status flags (Use GeneralStatusType enum to check which flags have been set)
    * </pre>
    */
   public Builder setGeneralStatus(int value) {
     bitField0_ |= 0x00002000;
     generalStatus_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 GeneralStatus = 14;</code>
    *
    * <pre>
    * General Status flags (Use GeneralStatusType enum to check which flags have been set)
    * </pre>
    */
   public Builder clearGeneralStatus() {
     bitField0_ = (bitField0_ & ~0x00002000);
     generalStatus_ = 0;
     onChanged();
     return this;
   }

   private TripSpeedSourceProto.TripSpeedSource tripSpeedSource_ = TripSpeedSourceProto.TripSpeedSource.TRIP_SPEED_SOURCE_NOT_SUPPORTED;
   /**
    * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
    *
    * <pre>
    * Trip speed source
    * </pre>
    */
   public boolean hasTripSpeedSource() {
     return ((bitField0_ & 0x00004000) == 0x00004000);
   }
   /**
    * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
    *
    * <pre>
    * Trip speed source
    * </pre>
    */
   public TripSpeedSourceProto.TripSpeedSource getTripSpeedSource() {
     return tripSpeedSource_;
   }
   /**
    * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
    *
    * <pre>
    * Trip speed source
    * </pre>
    */
   public Builder setTripSpeedSource(TripSpeedSourceProto.TripSpeedSource value) {
     if (value == null) {
       throw new NullPointerException();
     }
     bitField0_ |= 0x00004000;
     tripSpeedSource_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional .TripSpeedSource TripSpeedSource = 17 [default = TRIP_SPEED_SOURCE_NOT_SUPPORTED];</code>
    *
    * <pre>
    * Trip speed source
    * </pre>
    */
   public Builder clearTripSpeedSource() {
     bitField0_ = (bitField0_ & ~0x00004000);
     tripSpeedSource_ = TripSpeedSourceProto.TripSpeedSource.TRIP_SPEED_SOURCE_NOT_SUPPORTED;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:EventHeader)
 }

 static {
   defaultInstance = new EventHeader(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:EventHeader)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_EventHeader_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_EventHeader_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\026EventHeaderProto.proto\032 Enums/TripSpee" +
   "dSourceProto.proto\"\361\002\n\013EventHeader\022\022\n\nTe" +
   "mplateId\030\001 \002(\r\022\016\n\006UnitId\030\002 \001(\t\022\023\n\013Descri" +
   "ption\030\003 \001(\t\022\033\n\023UtcTimestampSeconds\030\004 \001(\004" +
   "\022\020\n\010Latitude\030\005 \001(\001\022\021\n\tLongitude\030\006 \001(\001\022\r\n" +
   "\005Speed\030\007 \001(\r\022\021\n\tDirection\030\010 \001(\r\022\020\n\010Odome" +
   "ter\030\t \001(\r\022\023\n\013InputStatus\030\n \001(\r\022\024\n\014Output" +
   "Status\030\013 \001(\r\022\025\n\rDriverKeyCode\030\014 \001(\r\022\016\n\006S" +
   "ource\030\r \001(\r\022\025\n\rGeneralStatus\030\016 \001(\r\022J\n\017Tr" +
   "ipSpeedSource\030\021 \001(\0162\020.TripSpeedSource:\037T",
   "RIP_SPEED_SOURCE_NOT_SUPPORTED"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       TripSpeedSourceProto.getDescriptor(),
     }, assigner);
 internal_static_EventHeader_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_EventHeader_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_EventHeader_descriptor,
     new java.lang.String[] { "TemplateId", "UnitId", "Description", "UtcTimestampSeconds", "Latitude", "Longitude", "Speed", "Direction", "Odometer", "InputStatus", "OutputStatus", "DriverKeyCode", "Source", "GeneralStatus", "TripSpeedSource", });
 TripSpeedSourceProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}

