package scopeProto;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: PeriodicTemperatureProto.proto

public final class PeriodicTemperatureProto {
private PeriodicTemperatureProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface PeriodicTemperatureOrBuilder extends
   // @@protoc_insertion_point(interface_extends:PeriodicTemperature)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required .EventHeader header = 1;</code>
  */
 boolean hasHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeader getHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder();

 /**
  * <code>optional sint32 sensor1 = 2;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 boolean hasSensor1();
 /**
  * <code>optional sint32 sensor1 = 2;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 int getSensor1();

 /**
  * <code>optional sint32 sensor2 = 3;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 boolean hasSensor2();
 /**
  * <code>optional sint32 sensor2 = 3;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 int getSensor2();

 /**
  * <code>optional sint32 sensor3 = 4;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 boolean hasSensor3();
 /**
  * <code>optional sint32 sensor3 = 4;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 int getSensor3();

 /**
  * <code>optional sint32 sensor4 = 5;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 boolean hasSensor4();
 /**
  * <code>optional sint32 sensor4 = 5;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 int getSensor4();

 /**
  * <code>optional bool sensor1_valid = 6;</code>
  *
  * <pre>
  * Sensor 1 data is valid
  * </pre>
  */
 boolean hasSensor1Valid();
 /**
  * <code>optional bool sensor1_valid = 6;</code>
  *
  * <pre>
  * Sensor 1 data is valid
  * </pre>
  */
 boolean getSensor1Valid();

 /**
  * <code>optional bool sensor2_valid = 7;</code>
  *
  * <pre>
  * Sensor 2 data is valid   
  * </pre>
  */
 boolean hasSensor2Valid();
 /**
  * <code>optional bool sensor2_valid = 7;</code>
  *
  * <pre>
  * Sensor 2 data is valid   
  * </pre>
  */
 boolean getSensor2Valid();

 /**
  * <code>optional bool sensor3_valid = 8;</code>
  *
  * <pre>
  * Sensor 3 data is valid
  * </pre>
  */
 boolean hasSensor3Valid();
 /**
  * <code>optional bool sensor3_valid = 8;</code>
  *
  * <pre>
  * Sensor 3 data is valid
  * </pre>
  */
 boolean getSensor3Valid();

 /**
  * <code>optional bool sensor4_valid = 9;</code>
  *
  * <pre>
  * Sensor 4 data is valid
  * </pre>
  */
 boolean hasSensor4Valid();
 /**
  * <code>optional bool sensor4_valid = 9;</code>
  *
  * <pre>
  * Sensor 4 data is valid
  * </pre>
  */
 boolean getSensor4Valid();

 /**
  * <code>optional uint32 temperature_status = 10;</code>
  *
  * <pre>
  * Temperature status
  * </pre>
  */
 boolean hasTemperatureStatus();
 /**
  * <code>optional uint32 temperature_status = 10;</code>
  *
  * <pre>
  * Temperature status
  * </pre>
  */
 int getTemperatureStatus();
}
/**
* Protobuf type {@code PeriodicTemperature}
*
* <pre>
* Periodic Temperature
* </pre>
*/
public static final class PeriodicTemperature extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:PeriodicTemperature)
   PeriodicTemperatureOrBuilder {
 // Use PeriodicTemperature.newBuilder() to construct.
 private PeriodicTemperature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private PeriodicTemperature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final PeriodicTemperature defaultInstance;
 public static PeriodicTemperature getDefaultInstance() {
   return defaultInstance;
 }

 public PeriodicTemperature getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private PeriodicTemperature(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 10: {
           EventHeaderProto.EventHeader.Builder subBuilder = null;
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
             subBuilder = header_.toBuilder();
           }
           header_ = input.readMessage(EventHeaderProto.EventHeader.PARSER, extensionRegistry);
           if (subBuilder != null) {
             subBuilder.mergeFrom(header_);
             header_ = subBuilder.buildPartial();
           }
           bitField0_ |= 0x00000001;
           break;
         }
         case 16: {
           bitField0_ |= 0x00000002;
           sensor1_ = input.readSInt32();
           break;
         }
         case 24: {
           bitField0_ |= 0x00000004;
           sensor2_ = input.readSInt32();
           break;
         }
         case 32: {
           bitField0_ |= 0x00000008;
           sensor3_ = input.readSInt32();
           break;
         }
         case 40: {
           bitField0_ |= 0x00000010;
           sensor4_ = input.readSInt32();
           break;
         }
         case 48: {
           bitField0_ |= 0x00000020;
           sensor1Valid_ = input.readBool();
           break;
         }
         case 56: {
           bitField0_ |= 0x00000040;
           sensor2Valid_ = input.readBool();
           break;
         }
         case 64: {
           bitField0_ |= 0x00000080;
           sensor3Valid_ = input.readBool();
           break;
         }
         case 72: {
           bitField0_ |= 0x00000100;
           sensor4Valid_ = input.readBool();
           break;
         }
         case 80: {
           bitField0_ |= 0x00000200;
           temperatureStatus_ = input.readUInt32();
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return PeriodicTemperatureProto.internal_static_PeriodicTemperature_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return PeriodicTemperatureProto.internal_static_PeriodicTemperature_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           PeriodicTemperatureProto.PeriodicTemperature.class, PeriodicTemperatureProto.PeriodicTemperature.Builder.class);
 }

 public static com.google.protobuf.Parser<PeriodicTemperature> PARSER =
     new com.google.protobuf.AbstractParser<PeriodicTemperature>() {
   public PeriodicTemperature parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new PeriodicTemperature(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<PeriodicTemperature> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int HEADER_FIELD_NUMBER = 1;
 private EventHeaderProto.EventHeader header_;
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public boolean hasHeader() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeader getHeader() {
   return header_;
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
   return header_;
 }

 public static final int SENSOR1_FIELD_NUMBER = 2;
 private int sensor1_;
 /**
  * <code>optional sint32 sensor1 = 2;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public boolean hasSensor1() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional sint32 sensor1 = 2;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public int getSensor1() {
   return sensor1_;
 }

 public static final int SENSOR2_FIELD_NUMBER = 3;
 private int sensor2_;
 /**
  * <code>optional sint32 sensor2 = 3;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public boolean hasSensor2() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional sint32 sensor2 = 3;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public int getSensor2() {
   return sensor2_;
 }

 public static final int SENSOR3_FIELD_NUMBER = 4;
 private int sensor3_;
 /**
  * <code>optional sint32 sensor3 = 4;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public boolean hasSensor3() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional sint32 sensor3 = 4;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public int getSensor3() {
   return sensor3_;
 }

 public static final int SENSOR4_FIELD_NUMBER = 5;
 private int sensor4_;
 /**
  * <code>optional sint32 sensor4 = 5;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public boolean hasSensor4() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional sint32 sensor4 = 5;</code>
  *
  * <pre>
  * Temperature in Celsius. -50...205
  * </pre>
  */
 public int getSensor4() {
   return sensor4_;
 }

 public static final int SENSOR1_VALID_FIELD_NUMBER = 6;
 private boolean sensor1Valid_;
 /**
  * <code>optional bool sensor1_valid = 6;</code>
  *
  * <pre>
  * Sensor 1 data is valid
  * </pre>
  */
 public boolean hasSensor1Valid() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional bool sensor1_valid = 6;</code>
  *
  * <pre>
  * Sensor 1 data is valid
  * </pre>
  */
 public boolean getSensor1Valid() {
   return sensor1Valid_;
 }

 public static final int SENSOR2_VALID_FIELD_NUMBER = 7;
 private boolean sensor2Valid_;
 /**
  * <code>optional bool sensor2_valid = 7;</code>
  *
  * <pre>
  * Sensor 2 data is valid   
  * </pre>
  */
 public boolean hasSensor2Valid() {
   return ((bitField0_ & 0x00000040) == 0x00000040);
 }
 /**
  * <code>optional bool sensor2_valid = 7;</code>
  *
  * <pre>
  * Sensor 2 data is valid   
  * </pre>
  */
 public boolean getSensor2Valid() {
   return sensor2Valid_;
 }

 public static final int SENSOR3_VALID_FIELD_NUMBER = 8;
 private boolean sensor3Valid_;
 /**
  * <code>optional bool sensor3_valid = 8;</code>
  *
  * <pre>
  * Sensor 3 data is valid
  * </pre>
  */
 public boolean hasSensor3Valid() {
   return ((bitField0_ & 0x00000080) == 0x00000080);
 }
 /**
  * <code>optional bool sensor3_valid = 8;</code>
  *
  * <pre>
  * Sensor 3 data is valid
  * </pre>
  */
 public boolean getSensor3Valid() {
   return sensor3Valid_;
 }

 public static final int SENSOR4_VALID_FIELD_NUMBER = 9;
 private boolean sensor4Valid_;
 /**
  * <code>optional bool sensor4_valid = 9;</code>
  *
  * <pre>
  * Sensor 4 data is valid
  * </pre>
  */
 public boolean hasSensor4Valid() {
   return ((bitField0_ & 0x00000100) == 0x00000100);
 }
 /**
  * <code>optional bool sensor4_valid = 9;</code>
  *
  * <pre>
  * Sensor 4 data is valid
  * </pre>
  */
 public boolean getSensor4Valid() {
   return sensor4Valid_;
 }

 public static final int TEMPERATURE_STATUS_FIELD_NUMBER = 10;
 private int temperatureStatus_;
 /**
  * <code>optional uint32 temperature_status = 10;</code>
  *
  * <pre>
  * Temperature status
  * </pre>
  */
 public boolean hasTemperatureStatus() {
   return ((bitField0_ & 0x00000200) == 0x00000200);
 }
 /**
  * <code>optional uint32 temperature_status = 10;</code>
  *
  * <pre>
  * Temperature status
  * </pre>
  */
 public int getTemperatureStatus() {
   return temperatureStatus_;
 }

 private void initFields() {
   header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   sensor1_ = 0;
   sensor2_ = 0;
   sensor3_ = 0;
   sensor4_ = 0;
   sensor1Valid_ = false;
   sensor2Valid_ = false;
   sensor3Valid_ = false;
   sensor4Valid_ = false;
   temperatureStatus_ = 0;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasHeader()) {
     memoizedIsInitialized = 0;
     return false;
   }
   if (!getHeader().isInitialized()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeMessage(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeSInt32(2, sensor1_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeSInt32(3, sensor2_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeSInt32(4, sensor3_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeSInt32(5, sensor4_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeBool(6, sensor1Valid_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     output.writeBool(7, sensor2Valid_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     output.writeBool(8, sensor3Valid_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     output.writeBool(9, sensor4Valid_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     output.writeUInt32(10, temperatureStatus_);
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeMessageSize(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeSInt32Size(2, sensor1_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeSInt32Size(3, sensor2_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeSInt32Size(4, sensor3_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeSInt32Size(5, sensor4_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBoolSize(6, sensor1Valid_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBoolSize(7, sensor2Valid_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBoolSize(8, sensor3Valid_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     size += com.google.protobuf.CodedOutputStream
       .computeBoolSize(9, sensor4Valid_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(10, temperatureStatus_);
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static PeriodicTemperatureProto.PeriodicTemperature parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(PeriodicTemperatureProto.PeriodicTemperature prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code PeriodicTemperature}
  *
  * <pre>
  * Periodic Temperature
  * </pre>
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:PeriodicTemperature)
     PeriodicTemperatureProto.PeriodicTemperatureOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return PeriodicTemperatureProto.internal_static_PeriodicTemperature_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return PeriodicTemperatureProto.internal_static_PeriodicTemperature_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             PeriodicTemperatureProto.PeriodicTemperature.class, PeriodicTemperatureProto.PeriodicTemperature.Builder.class);
   }

   // Construct using PeriodicTemperatureProto.PeriodicTemperature.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
       getHeaderFieldBuilder();
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     sensor1_ = 0;
     bitField0_ = (bitField0_ & ~0x00000002);
     sensor2_ = 0;
     bitField0_ = (bitField0_ & ~0x00000004);
     sensor3_ = 0;
     bitField0_ = (bitField0_ & ~0x00000008);
     sensor4_ = 0;
     bitField0_ = (bitField0_ & ~0x00000010);
     sensor1Valid_ = false;
     bitField0_ = (bitField0_ & ~0x00000020);
     sensor2Valid_ = false;
     bitField0_ = (bitField0_ & ~0x00000040);
     sensor3Valid_ = false;
     bitField0_ = (bitField0_ & ~0x00000080);
     sensor4Valid_ = false;
     bitField0_ = (bitField0_ & ~0x00000100);
     temperatureStatus_ = 0;
     bitField0_ = (bitField0_ & ~0x00000200);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return PeriodicTemperatureProto.internal_static_PeriodicTemperature_descriptor;
   }

   public PeriodicTemperatureProto.PeriodicTemperature getDefaultInstanceForType() {
     return PeriodicTemperatureProto.PeriodicTemperature.getDefaultInstance();
   }

   public PeriodicTemperatureProto.PeriodicTemperature build() {
     PeriodicTemperatureProto.PeriodicTemperature result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public PeriodicTemperatureProto.PeriodicTemperature buildPartial() {
     PeriodicTemperatureProto.PeriodicTemperature result = new PeriodicTemperatureProto.PeriodicTemperature(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     if (headerBuilder_ == null) {
       result.header_ = header_;
     } else {
       result.header_ = headerBuilder_.build();
     }
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.sensor1_ = sensor1_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.sensor2_ = sensor2_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.sensor3_ = sensor3_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.sensor4_ = sensor4_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.sensor1Valid_ = sensor1Valid_;
     if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
       to_bitField0_ |= 0x00000040;
     }
     result.sensor2Valid_ = sensor2Valid_;
     if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
       to_bitField0_ |= 0x00000080;
     }
     result.sensor3Valid_ = sensor3Valid_;
     if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
       to_bitField0_ |= 0x00000100;
     }
     result.sensor4Valid_ = sensor4Valid_;
     if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
       to_bitField0_ |= 0x00000200;
     }
     result.temperatureStatus_ = temperatureStatus_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof PeriodicTemperatureProto.PeriodicTemperature) {
       return mergeFrom((PeriodicTemperatureProto.PeriodicTemperature)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(PeriodicTemperatureProto.PeriodicTemperature other) {
     if (other == PeriodicTemperatureProto.PeriodicTemperature.getDefaultInstance()) return this;
     if (other.hasHeader()) {
       mergeHeader(other.getHeader());
     }
     if (other.hasSensor1()) {
       setSensor1(other.getSensor1());
     }
     if (other.hasSensor2()) {
       setSensor2(other.getSensor2());
     }
     if (other.hasSensor3()) {
       setSensor3(other.getSensor3());
     }
     if (other.hasSensor4()) {
       setSensor4(other.getSensor4());
     }
     if (other.hasSensor1Valid()) {
       setSensor1Valid(other.getSensor1Valid());
     }
     if (other.hasSensor2Valid()) {
       setSensor2Valid(other.getSensor2Valid());
     }
     if (other.hasSensor3Valid()) {
       setSensor3Valid(other.getSensor3Valid());
     }
     if (other.hasSensor4Valid()) {
       setSensor4Valid(other.getSensor4Valid());
     }
     if (other.hasTemperatureStatus()) {
       setTemperatureStatus(other.getTemperatureStatus());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasHeader()) {
       
       return false;
     }
     if (!getHeader().isInitialized()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     PeriodicTemperatureProto.PeriodicTemperature parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (PeriodicTemperatureProto.PeriodicTemperature) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private EventHeaderProto.EventHeader header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> headerBuilder_;
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public boolean hasHeader() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader getHeader() {
     if (headerBuilder_ == null) {
       return header_;
     } else {
       return headerBuilder_.getMessage();
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (value == null) {
         throw new NullPointerException();
       }
       header_ = value;
       onChanged();
     } else {
       headerBuilder_.setMessage(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(
       EventHeaderProto.EventHeader.Builder builderForValue) {
     if (headerBuilder_ == null) {
       header_ = builderForValue.build();
       onChanged();
     } else {
       headerBuilder_.setMessage(builderForValue.build());
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder mergeHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (((bitField0_ & 0x00000001) == 0x00000001) &&
           header_ != EventHeaderProto.EventHeader.getDefaultInstance()) {
         header_ =
           EventHeaderProto.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
       } else {
         header_ = value;
       }
       onChanged();
     } else {
       headerBuilder_.mergeFrom(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder clearHeader() {
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
       onChanged();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader.Builder getHeaderBuilder() {
     bitField0_ |= 0x00000001;
     onChanged();
     return getHeaderFieldBuilder().getBuilder();
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
     if (headerBuilder_ != null) {
       return headerBuilder_.getMessageOrBuilder();
     } else {
       return header_;
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> 
       getHeaderFieldBuilder() {
     if (headerBuilder_ == null) {
       headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
           EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder>(
               getHeader(),
               getParentForChildren(),
               isClean());
       header_ = null;
     }
     return headerBuilder_;
   }

   private int sensor1_ ;
   /**
    * <code>optional sint32 sensor1 = 2;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public boolean hasSensor1() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional sint32 sensor1 = 2;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public int getSensor1() {
     return sensor1_;
   }
   /**
    * <code>optional sint32 sensor1 = 2;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder setSensor1(int value) {
     bitField0_ |= 0x00000002;
     sensor1_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional sint32 sensor1 = 2;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder clearSensor1() {
     bitField0_ = (bitField0_ & ~0x00000002);
     sensor1_ = 0;
     onChanged();
     return this;
   }

   private int sensor2_ ;
   /**
    * <code>optional sint32 sensor2 = 3;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public boolean hasSensor2() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional sint32 sensor2 = 3;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public int getSensor2() {
     return sensor2_;
   }
   /**
    * <code>optional sint32 sensor2 = 3;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder setSensor2(int value) {
     bitField0_ |= 0x00000004;
     sensor2_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional sint32 sensor2 = 3;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder clearSensor2() {
     bitField0_ = (bitField0_ & ~0x00000004);
     sensor2_ = 0;
     onChanged();
     return this;
   }

   private int sensor3_ ;
   /**
    * <code>optional sint32 sensor3 = 4;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public boolean hasSensor3() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional sint32 sensor3 = 4;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public int getSensor3() {
     return sensor3_;
   }
   /**
    * <code>optional sint32 sensor3 = 4;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder setSensor3(int value) {
     bitField0_ |= 0x00000008;
     sensor3_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional sint32 sensor3 = 4;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder clearSensor3() {
     bitField0_ = (bitField0_ & ~0x00000008);
     sensor3_ = 0;
     onChanged();
     return this;
   }

   private int sensor4_ ;
   /**
    * <code>optional sint32 sensor4 = 5;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public boolean hasSensor4() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional sint32 sensor4 = 5;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public int getSensor4() {
     return sensor4_;
   }
   /**
    * <code>optional sint32 sensor4 = 5;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder setSensor4(int value) {
     bitField0_ |= 0x00000010;
     sensor4_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional sint32 sensor4 = 5;</code>
    *
    * <pre>
    * Temperature in Celsius. -50...205
    * </pre>
    */
   public Builder clearSensor4() {
     bitField0_ = (bitField0_ & ~0x00000010);
     sensor4_ = 0;
     onChanged();
     return this;
   }

   private boolean sensor1Valid_ ;
   /**
    * <code>optional bool sensor1_valid = 6;</code>
    *
    * <pre>
    * Sensor 1 data is valid
    * </pre>
    */
   public boolean hasSensor1Valid() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional bool sensor1_valid = 6;</code>
    *
    * <pre>
    * Sensor 1 data is valid
    * </pre>
    */
   public boolean getSensor1Valid() {
     return sensor1Valid_;
   }
   /**
    * <code>optional bool sensor1_valid = 6;</code>
    *
    * <pre>
    * Sensor 1 data is valid
    * </pre>
    */
   public Builder setSensor1Valid(boolean value) {
     bitField0_ |= 0x00000020;
     sensor1Valid_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional bool sensor1_valid = 6;</code>
    *
    * <pre>
    * Sensor 1 data is valid
    * </pre>
    */
   public Builder clearSensor1Valid() {
     bitField0_ = (bitField0_ & ~0x00000020);
     sensor1Valid_ = false;
     onChanged();
     return this;
   }

   private boolean sensor2Valid_ ;
   /**
    * <code>optional bool sensor2_valid = 7;</code>
    *
    * <pre>
    * Sensor 2 data is valid   
    * </pre>
    */
   public boolean hasSensor2Valid() {
     return ((bitField0_ & 0x00000040) == 0x00000040);
   }
   /**
    * <code>optional bool sensor2_valid = 7;</code>
    *
    * <pre>
    * Sensor 2 data is valid   
    * </pre>
    */
   public boolean getSensor2Valid() {
     return sensor2Valid_;
   }
   /**
    * <code>optional bool sensor2_valid = 7;</code>
    *
    * <pre>
    * Sensor 2 data is valid   
    * </pre>
    */
   public Builder setSensor2Valid(boolean value) {
     bitField0_ |= 0x00000040;
     sensor2Valid_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional bool sensor2_valid = 7;</code>
    *
    * <pre>
    * Sensor 2 data is valid   
    * </pre>
    */
   public Builder clearSensor2Valid() {
     bitField0_ = (bitField0_ & ~0x00000040);
     sensor2Valid_ = false;
     onChanged();
     return this;
   }

   private boolean sensor3Valid_ ;
   /**
    * <code>optional bool sensor3_valid = 8;</code>
    *
    * <pre>
    * Sensor 3 data is valid
    * </pre>
    */
   public boolean hasSensor3Valid() {
     return ((bitField0_ & 0x00000080) == 0x00000080);
   }
   /**
    * <code>optional bool sensor3_valid = 8;</code>
    *
    * <pre>
    * Sensor 3 data is valid
    * </pre>
    */
   public boolean getSensor3Valid() {
     return sensor3Valid_;
   }
   /**
    * <code>optional bool sensor3_valid = 8;</code>
    *
    * <pre>
    * Sensor 3 data is valid
    * </pre>
    */
   public Builder setSensor3Valid(boolean value) {
     bitField0_ |= 0x00000080;
     sensor3Valid_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional bool sensor3_valid = 8;</code>
    *
    * <pre>
    * Sensor 3 data is valid
    * </pre>
    */
   public Builder clearSensor3Valid() {
     bitField0_ = (bitField0_ & ~0x00000080);
     sensor3Valid_ = false;
     onChanged();
     return this;
   }

   private boolean sensor4Valid_ ;
   /**
    * <code>optional bool sensor4_valid = 9;</code>
    *
    * <pre>
    * Sensor 4 data is valid
    * </pre>
    */
   public boolean hasSensor4Valid() {
     return ((bitField0_ & 0x00000100) == 0x00000100);
   }
   /**
    * <code>optional bool sensor4_valid = 9;</code>
    *
    * <pre>
    * Sensor 4 data is valid
    * </pre>
    */
   public boolean getSensor4Valid() {
     return sensor4Valid_;
   }
   /**
    * <code>optional bool sensor4_valid = 9;</code>
    *
    * <pre>
    * Sensor 4 data is valid
    * </pre>
    */
   public Builder setSensor4Valid(boolean value) {
     bitField0_ |= 0x00000100;
     sensor4Valid_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional bool sensor4_valid = 9;</code>
    *
    * <pre>
    * Sensor 4 data is valid
    * </pre>
    */
   public Builder clearSensor4Valid() {
     bitField0_ = (bitField0_ & ~0x00000100);
     sensor4Valid_ = false;
     onChanged();
     return this;
   }

   private int temperatureStatus_ ;
   /**
    * <code>optional uint32 temperature_status = 10;</code>
    *
    * <pre>
    * Temperature status
    * </pre>
    */
   public boolean hasTemperatureStatus() {
     return ((bitField0_ & 0x00000200) == 0x00000200);
   }
   /**
    * <code>optional uint32 temperature_status = 10;</code>
    *
    * <pre>
    * Temperature status
    * </pre>
    */
   public int getTemperatureStatus() {
     return temperatureStatus_;
   }
   /**
    * <code>optional uint32 temperature_status = 10;</code>
    *
    * <pre>
    * Temperature status
    * </pre>
    */
   public Builder setTemperatureStatus(int value) {
     bitField0_ |= 0x00000200;
     temperatureStatus_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 temperature_status = 10;</code>
    *
    * <pre>
    * Temperature status
    * </pre>
    */
   public Builder clearTemperatureStatus() {
     bitField0_ = (bitField0_ & ~0x00000200);
     temperatureStatus_ = 0;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:PeriodicTemperature)
 }

 static {
   defaultInstance = new PeriodicTemperature(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:PeriodicTemperature)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_PeriodicTemperature_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_PeriodicTemperature_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\036PeriodicTemperatureProto.proto\032\026EventH" +
   "eaderProto.proto\"\357\001\n\023PeriodicTemperature" +
   "\022\034\n\006header\030\001 \002(\0132\014.EventHeader\022\017\n\007sensor" +
   "1\030\002 \001(\021\022\017\n\007sensor2\030\003 \001(\021\022\017\n\007sensor3\030\004 \001(" +
   "\021\022\017\n\007sensor4\030\005 \001(\021\022\025\n\rsensor1_valid\030\006 \001(" +
   "\010\022\025\n\rsensor2_valid\030\007 \001(\010\022\025\n\rsensor3_vali" +
   "d\030\010 \001(\010\022\025\n\rsensor4_valid\030\t \001(\010\022\032\n\022temper" +
   "ature_status\030\n \001(\r"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       EventHeaderProto.getDescriptor(),
     }, assigner);
 internal_static_PeriodicTemperature_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_PeriodicTemperature_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_PeriodicTemperature_descriptor,
     new java.lang.String[] { "Header", "Sensor1", "Sensor2", "Sensor3", "Sensor4", "Sensor1Valid", "Sensor2Valid", "Sensor3Valid", "Sensor4Valid", "TemperatureStatus", });
 EventHeaderProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}
